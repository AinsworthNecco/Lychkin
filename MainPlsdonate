-- ... (Phần đầu script với GUI debug giữ nguyên như trước) ...
-- screenPrint, khai báo Players, LocalPlayer, ReplicatedStorage, Remotes ...

--===================================================================
-- VÒNG LẶP TÌM REMOTES với DEBUG CHI TIẾT HƠN
--===================================================================
screenPrint("DEBUG: Bắt đầu tìm Remotes module (phiên bản gọi PromotionBlimpGiftbux)...")
local remotesFound = false
for i, v_module in next, ReplicatedStorage:GetChildren() do
    if v_module.Name:find('Remote') and v_module:IsA('ModuleScript') then
        screenPrint(string.format("DEBUG: A - Kiểm tra ứng viên Remotes: '%s'", v_module.Name))
        local tempRemotes
        local sucRequire, requireResult = pcall(function()
            tempRemotes = require(v_module)
        end)

        if sucRequire and typeof(tempRemotes) == "table" and typeof(tempRemotes.Event) == "function" then
            screenPrint(string.format("DEBUG: B - Đã require module '%s', có 'Event' là function. Chuẩn bị pcall FireServer.", v_module.Name))
            
            local sucEventTest, eventTestResult
            
            screenPrint(string.format("DEBUG: C - Sắp pcall FireServer cho PromotionBlimpGiftbux trên %s", v_module.Name))
            sucEventTest, eventTestResult = pcall(function()
                screenPrint(string.format("DEBUG: D - BÊN TRONG PCALL: Thử gọi Event 'PromotionBlimpGiftbux' trên module %s", v_module.Name))
                tempRemotes.Event('PromotionBlimpGiftbux'):FireServer() -- Lệnh gốc
                screenPrint(string.format("DEBUG: E - BÊN TRONG PCALL: Gọi Event 'PromotionBlimpGiftbux' XONG (không có lỗi script). Module: %s", v_module.Name))
            end)
            
            screenPrint(string.format("DEBUG: F - ĐÃ THOÁT PCALL cho FireServer. sucEventTest: %s. Module: %s", tostring(sucEventTest), v_module.Name))
            if eventTestResult then 
                screenPrint(string.format("DEBUG: F.1 - eventTestResult (nếu có lỗi): %s", tostring(eventTestResult)))
            end

            if sucEventTest then
                Remotes = tempRemotes
                remotesFound = true
                screenPrint(string.format("DEBUG: G - Remotes module được gán LÀ: %s", v_module.Name))
                break 
            else
                screenPrint(string.format("DEBUG: H - Thử Event 'PromotionBlimpGiftbux' thất bại (sucEventTest=false). Module: %s", v_module.Name))
                 if eventTestResult then screenPrint(string.format("DEBUG: H.1 - Lỗi cụ thể: %s", tostring(eventTestResult))) end
            end
        else
            if not sucRequire then screenPrint(string.format("DEBUG: Lỗi khi require module '%s': %s", v_module.Name, tostring(requireResult))) end
            -- (Các print debug khác cho trường hợp require lỗi có thể thêm ở đây)
        end
    end
    task.wait()
end

if not remotesFound or not Remotes then
    screenPrint("<font color='rgb(255,100,100)'>I - KHÔNG TÌM THẤY Remotes module! Script không thể tiếp tục an toàn.</font>")
    return
else
    screenPrint("<font color='rgb(100,255,100)'>J - Remotes module đã được tìm thấy và gán.</font>")
end
--===================================================================
-- KẾT THÚC VÒNG LẶP TÌM REMOTES
--===================================================================

-- ... (Phần còn lại của script: _boothlocation, findUnclaimed, teleport, claim...)
-- Hãy đảm bảo bạn dán phần này vào đúng chỗ trong script "siêu tối giản v2" trước đó,
-- thay thế cho vòng lặp tìm Remotes cũ.
