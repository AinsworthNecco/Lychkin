--================================================================
-- PHẦN 1: KHAI BÁO DỊCH VỤ VÀ BIẾN
--================================================================

-- Dịch vụ Roblox
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local UserInputService = game:GetService("UserInputService")

-- Biến người chơi
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Anti-AFK
task.spawn(function()
    if not VirtualUser then return end
    LocalPlayer.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end)
end)

--================================================================
-- PHẦN 2: GIAO DIỆN FLUENT UI
--================================================================

-- Tải thư viện Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Tạo cửa sổ chính
local Window = Fluent:CreateWindow({
    Title = "Lychkin's Script",
    SubTitle = "Lưu và Tải Cài Đặt",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
	MinimizeKey = Enum.KeyCode.LeftControl,
    Acrylic = true
})

-- Tùy chọn (lưu giá trị UI)
local Options = Fluent.Options

-- Tabs giao diện (Bạn sẽ thêm các tab của mình ở đây)
local Tabs = {
    Main = Window:AddTab({ Title = "Chức năng chính", Icon = "rbxassetid://6031398523" }),
    Misc = Window:AddTab({ Title = "Linh tinh", Icon = "rbxassetid://6031398453" }),
    Settings = Window:AddTab({ Title = "Cài đặt", Icon = "rbxassetid://6031398338" }),
}

--================================================================
-- PHẦN 2.5: NÚT BẤM VÀ PHÍM ẨN/HIỆN (ĐÃ SỬA LỖI)
--================================================================

-- Tạo một ScreenGui riêng cho nút bấm
local toggleGui = Instance.new("ScreenGui", PlayerGui)
toggleGui.Name = "LychkinToggleUI"
toggleGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
toggleGui.ResetOnSpawn = false
toggleGui.DisplayOrder = 9999 -- Rất quan trọng: Đảm bảo UI này luôn ở trên cùng

-- Tạo nút bấm
local ToggleButton = Instance.new("ImageButton", toggleGui)
ToggleButton.Name = "ToggleButton"
ToggleButton.Image = "rbxassetid://9294623142"
ToggleButton.Size = UDim2.fromOffset(52, 52)
ToggleButton.Position = UDim2.new(0, 20, 1, -72)
ToggleButton.BackgroundTransparency = 1
ToggleButton.ZIndex = 999
ToggleButton.Draggable = true
ToggleButton.Active = true -- Đảm bảo nút luôn có thể tương tác

-- --- Xử lý cho Mobile: Nút bấm trên màn hình ---
-- Kết nối trực tiếp với sự kiện click của nút, đây là cách đáng tin cậy nhất.
ToggleButton.MouseButton1Click:Connect(function()
    Window:Toggle()
end)

-- --- Xử lý cho PC: Phím LeftControl ---
-- Giữ lại logic này để hỗ trợ người dùng PC.
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    -- Bỏ qua nếu người dùng đang gõ trong chat
    if gameProcessedEvent then return end

    if input.KeyCode == Enum.KeyCode.LeftControl then
        Window:Toggle()
    end
end)


--================================================================
-- PHẦN 3: SAVE MANAGER 
--================================================================

local SaveManager = {}
local FOLDER_NAME = "Lychkin"
local FILE_NAME = "LychkinSettings.txt"
local FILE_PATH = FOLDER_NAME .. "/" .. FILE_NAME

if not isfolder(FOLDER_NAME) then makefolder(FOLDER_NAME) end

function SaveManager:LoadData()
    if not isfile(FILE_PATH) then return {} end
    local success, fileContent = pcall(readfile, FILE_PATH)
    if not success or fileContent == "" then return {} end
    local success, decodedData = pcall(function() return HttpService:JSONDecode(fileContent) end)
    if success and type(decodedData) == "table" then
        Fluent:Notify({ Title = "Tải thành công", Content = "Đã áp dụng cài đặt đã lưu.", Duration = 3 })
        return decodedData
    else
        warn("Lỗi file cài đặt, sử dụng cài đặt mặc định.")
        return {}
    end
end

function SaveManager:Save()
    local dataToSave = {}
    for name, option in pairs(Options) do dataToSave[name] = option.Value end
    local success, encodedData = pcall(function() return HttpService:JSONEncode(dataToSave) end)
    if success then
        writefile(FILE_PATH, encodedData)
        Fluent:Notify({ Title = "Đã lưu!", Content = "Cài đặt của bạn đã được lưu.", Duration = 2 })
    else
        warn("Lỗi khi lưu cài đặt:", encodedData)
    end
end

local savedData = SaveManager:LoadData()

--================================================================
-- PHẦN 4: LOGIC VÀ CÁC CHỨC NĂNG
--================================================================

-- ------------------------------------------------------------------
-- --- NÚT TEST NHẤN PHÍM (Mô phỏng Space - ĐÃ SỬA LỖI)
-- ------------------------------------------------------------------

Tabs.Main:AddButton({
    Title = "Test nhấn phím Space",
    Description = "Nhấn vào đây để mô phỏng việc nhấn và thả phím Space.",
    Callback = function()
        -- 'keypress' là một hàm không chính thức nhưng phổ biến trong nhiều executor
        -- để mô phỏng việc nhấn và thả một phím ngay lập tức.
        if keypress then
            Fluent:Notify({ Title = "Test", Content = "Đang mô phỏng nhấn phím Space...", Duration = 2 })
            -- SỬA LỖI: Truyền vào giá trị số của mã phím, không phải đối tượng Enum
            keypress(Enum.KeyCode.LeftControl.Value)
        else
            -- Nếu hàm 'keypress' không tồn tại, thông báo cho người dùng.
            Fluent:Notify({ Title = "Lỗi", Content = "Môi trường của bạn không hỗ trợ hàm 'keypress'.", Duration = 4 })
        end
    end
})
