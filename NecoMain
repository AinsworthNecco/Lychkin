--[[
    TÍCH HỢP SCRIPT TỰ ĐỘNG NHẬN BOOTH VÀO FLUENT UI - V5

    - TÍNH NĂNG MỚI:
        - Đã sửa lỗi nghiêm trọng không lưu được setting do một lỗi đánh máy (typo).
    
    - Tác giả gốc của logic booth: szze
    - Thư viện UI: Fluent by dawid-scripts
    - Người tích hợp và nâng cấp: Gemini
]]

--================================================================
-- PHẦN 1: KHAI BÁO DỊCH VỤ VÀ BIẾN
--================================================================

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")

-- Player
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Remotes & Threads
local Remotes

-- Anti-AFK
task.spawn(function()
    if not VirtualUser then return end
    LocalPlayer.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end)
end)

--================================================================
-- PHẦN 2: THIẾT LẬP GIAO DIỆN (FLUENT UI)
--================================================================

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Lychkin's Plsdonate",
    SubTitle = "v5.0 - Save Fixed",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
})

local Options = Fluent.Options
local Tabs = {
    AutoFarm = Window:AddTab({ Title = "AutoFarm", Icon = "rbxassetid://4483345998" }),
    Hop = Window:AddTab({ Title = "Hop", Icon = "rbxassetid://6032363994" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "rbxassetid://4483329248" })
}

--================================================================
-- PHẦN 3: TÌM REMOTES MODULE (BẮT BUỘC)
--================================================================
task.spawn(function()
    for i, v in next, ReplicatedStorage:GetChildren() do
        if v.Name:find('Remote') and v:IsA('ModuleScript') then
            local success, result = pcall(function() return require(v) end)
            if success and typeof(result) == "table" and result.Event then
                local sucFire = pcall(function() result.Event('PromotionBlimpGiftbux'):FireServer() end)
                if sucFire then
                    Remotes = result
                    Fluent:Notify({ Title = "Hệ thống", Content = "Đã tìm thấy Remotes Module!" })
                    break
                end
            end
        end
        task.wait()
    end
    if not Remotes then
        Fluent:Notify({ Title = "Lỗi nghiêm trọng", Content = "Không tìm thấy Remotes Module. Script sẽ không hoạt động.", Duration = 10 })
    end
end)

--================================================================
-- PHẦN 4: XÂY DỰNG CÁC CHỨC NĂNG TRONG TAB AUTOFARM
--================================================================

local boothClaimingThread

--- KHỐI CHỨC NĂNG 1: AUTO CLAIM BOOTH ---
Options.AutoClaimToggle = Tabs.AutoFarm:AddToggle("AutoClaimToggle", {
    Title = "Auto Claim Booth",
    Description = "Khi bật, sẽ tự động tìm và chiếm booth cho bạn.",
    Default = false,
    Callback = function(state)
        local function hasClaimedBooth()
            if not Workspace:FindFirstChild("BoothInteractions") then return false end
            for _, booth in ipairs(Workspace.BoothInteractions:GetChildren()) do
                if booth:GetAttribute("Owner") and booth:GetAttribute("Owner") == LocalPlayer.UserId then
                    return true
                end
            end
            return false
        end

        local function findAndClaim()
            if not Remotes then return end
            
            local _boothlocation
            local suc, _shuffled = pcall(function() return Workspace:WaitForChild('MapUI', 3) end)
            if not suc or not _shuffled then
                local suc2, res2 = pcall(function() return PlayerGui:WaitForChild('MapUIContainer', 5):WaitForChild('MapUI', 5) end)
                if suc2 then _boothlocation = res2 end
            else
                _boothlocation = _shuffled
            end

            if not _boothlocation then return end
            
            local unclaimed = {}
            local mainCheckPosition = Vector3.new(165.161, 0, 311.636)
            local boothUI = _boothlocation:WaitForChild("BoothUI")
            local interactions = Workspace:WaitForChild("BoothInteractions")

            for _, uiFrame in ipairs(boothUI:GetChildren()) do
                if uiFrame.Details.Owner.Text == "unclaimed" then
                    local boothNum = tonumber(uiFrame.Name:match("%d+"))
                    if boothNum then
                        for _, interact in ipairs(interactions:GetChildren()) do
                            if interact:GetAttribute("BoothSlot") == boothNum and (Vector3.new(interact.Position.X, 0, interact.Position.Z) - mainCheckPosition).Magnitude < 92 then
                                table.insert(unclaimed, boothNum)
                                break
                            end
                        end
                    end
                end
            end

            if #unclaimed == 0 then return end
            
            local chosenBoothNumber = unclaimed[1]
            local claimSuccess = false
            if pcall(function()
                Remotes.Event("ClaimBooth"):InvokeServer(chosenBoothNumber)
                task.wait(1)
                if not string.find(boothUI:FindFirstChild("BoothUI" .. chosenBoothNumber).Details.Owner.Text, LocalPlayer.DisplayName) then
                    error()
                end
            end) then
                claimSuccess = true
                Fluent:Notify({ Title = "Thành công!", Content = "Đã chiếm được gian hàng số " .. chosenBoothNumber })
            else
                return
            end

            if claimSuccess then
                Fluent:Notify({ Title = "Dịch chuyển", Content = "Đang đưa bạn đến gian hàng..." })
                local boothPos
                for _, v in ipairs(Workspace.BoothInteractions:GetChildren()) do
                    if v:GetAttribute("BoothSlot") == chosenBoothNumber then
                        boothPos = v.CFrame * CFrame.new(0, 0, Options.BoothPosition.Value)
                        break
                    end
                end

                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local rootPart = character:WaitForChild("HumanoidRootPart")
                
                rootPart.CFrame = CFrame.new(boothPos.Position, Vector3.new(mainCheckPosition.X, rootPart.Position.Y, mainCheckPosition.Z))
                Fluent:Notify({ Title = "Hoàn tất!", Content = "Đã đến nơi. Chế độ tự động vẫn đang chạy." })
            end
        end

        if state then
            Fluent:Notify({ Title = "Auto Claim", Content = "Đã BẬT. Bắt đầu tìm kiếm booth..." })
            boothClaimingThread = task.spawn(function()
                while Options.AutoClaimToggle.Value and task.wait(3) do
                    local character = LocalPlayer.Character
                    if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 then
                        if not hasClaimedBooth() then
                            findAndClaim()
                        end
                    end
                end
            end)
        else
            if boothClaimingThread then
                task.cancel(boothClaimingThread)
                boothClaimingThread = nil
                Fluent:Notify({ Title = "Auto Claim", Content = "Đã TẮT." })
            end
        end
    end
})

--- KHỐI CHỨC NĂNG 2: TÙY CHỈNH VỊ TRÍ ĐỨNG ---
Options.BoothPosition = Tabs.AutoFarm:AddSlider("BoothPosition", {
    Title = "Vị trí đứng tại Booth",
    Description = "Điều chỉnh vị trí đứng so với booth (3 là đứng trước mặt).",
    Default = 3,
    Min = -6,
    Max = 6,
    Rounding = 0,
    Suffix = " offset"
})

--================================================================
-- PHẦN 5: CÀI ĐẶT LƯU TRỮ (SAVE MANAGER)
--================================================================

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:SetAutosave(true)
SaveManager:AddOptions(Options)

InterfaceManager:BuildInterfaceSection(Tabs.Settings)

-- *** ĐÃ SỬA LỖI TẠI ĐÂY ***
-- Sai: Tabs.sETTINGS
-- Đúng: Tabs.Settings
SaveManager:BuildConfigSection(Tabs.Settings)

SaveManager:Load()
Fluent:SelectTab(1)

-- Tự động kích hoạt lại luồng Auto Claim nếu setting đã được lưu là ON
if Options.AutoClaimToggle.Value then
    Options.AutoClaimToggle:Fire()
end
