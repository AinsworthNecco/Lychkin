#!/data/data/com.termux/files/usr/bin/bash
# Script quản lý toàn diện chu trình của Roblox: Mở, kiểm tra liên tục, và khởi động lại tuần tự.
# PHIÊN BẢN NÂNG CẤP: Tự động yêu cầu root, kiểm tra vô hạn cho đến khi mở đủ, và khởi động lại riêng lẻ từng phiên bản.
#---------------------------------------------------
# -- CÀI ĐẶT CHÍNH --
# Tất cả các tùy chỉnh đều ở đây.
#---------------------------------------------------

# Bật/Tắt chu trình khởi động lại.
# true:  Mở -> Kiểm tra liên tục -> Chạy chu trình khởi động lại tuần tự vô hạn.
# false: Mở -> Kiểm tra liên tục cho đến khi đủ -> Kết thúc script.
EnableRestartCycle=true

# Thêm hoặc xóa các hậu tố phiên bản bạn muốn mở (phân cách bởi dấu cách)
Suffixes="b c d e f"

# URL của VIP Server bạn muốn tham gia
VipServerUrl="roblox://placeId=8737602449"

# Thời gian (giây) chờ giữa mỗi lần mở một phiên bản
OpenDelay=10

# Thời gian (giây) chờ giữa mỗi lần quét lại các phiên bản chưa chạy
CheckInterval=20

# Thời gian (giây) MỖI phiên bản sẽ chạy trước khi được tự động khởi động lại
# Ví dụ: 3600 = mỗi tab sẽ chạy trong 1 giờ, sau đó tự khởi động lại, rồi đến lượt tab tiếp theo.
InstanceRunTime=3600

# Thời gian (giây) chờ sau khi khởi động lại một phiên bản, trước khi bắt đầu đếm ngược cho phiên bản tiếp theo.
# 900 giây = 15 phút
DelayBetweenRestarts=900

# Tên gói cơ bản của Roblox (không nên thay đổi)
BasePackageName="com.roblox.clien"

#---------------------------------------------------
# -- TỰ ĐỘNG KIỂM TRA ROOT --
#---------------------------------------------------
# Kểm tra xem script có đang chạy với quyền root không (EUID = 0)
if [[ $EUID -ne 0 ]]; then
    echo "Script này cần quyền root để thực thi 'kill'."
    echo "Đang cố gắng chạy lại script với 'su'..."
    # Chạy lại chính nó với quyền root
    su -c "bash \"$0\""
    exit 0
fi

#---------------------------------------------------
# -- LOGIC CHÍNH --
# Không cần sửa phần dưới đây.
#---------------------------------------------------

echo "THÀNH CÔNG: Script đang chạy với quyền root."
echo "--- KHỞI ĐỘNG SCRIPT QUẢN LÝ TOÀN DIỆN ROBLOX (NÂNG CẤP) ---"
echo "Chế độ khởi động lại tuần tự: $EnableRestartCycle"

# Chuyển chuỗi Suffixes thành một mảng các tên gói đầy đủ
read -r -a suffixes_array <<< "$Suffixes"
all_packages=()
for suffix in "${suffixes_array[@]}"; do
    all_packages+=("${BasePackageName}${suffix}")
done
totalInstances=${#all_packages[@]}

if (( totalInstances == 0 )); then
    echo "Lỗi: Vui lòng định nghĩa ít nhất một hậu tố trong biến 'Suffixes'."
    exit 1
fi

# Hàm khởi chạy ban đầu và xác minh TẤT CẢ các phiên bản đều đang chạy
function initial_launch_and_verify() {
    echo "================================================="
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] BẮT ĐẦU QUÁ TRÌNH MỞ VÀ KIỂM TRA BAN ĐẦU."
    echo "================================================="

    # --- Bước 1: Mở toàn bộ các phiên bản trong danh sách lần đầu ---
    echo "Bước 1: Đang thử mở $totalInstances phiên bản..."
    for package in "${all_packages[@]}"; do
        echo "  => Đang mở: $package"
        am start -a android.intent.action.VIEW -d "$VipServerUrl" -p "$package" > /dev/null 2>&1
        sleep "$OpenDelay"
    done

    # --- Bước 2: Kiểm tra liên tục cho đến khi tất cả đều chạy ---
    echo "Bước 2: Bắt đầu kiểm tra liên tục cho đến khi mở đủ..."
    while true; do
        not_running_packages=()
        # Quét tìm các gói chưa chạy
        for package in "${all_packages[@]}"; do
            if ! pidof "$package" > /dev/null; then
                not_running_packages+=("$package")
            fi
        done

        if (( ${#not_running_packages[@]} == 0 )); then
            echo "THÀNH CÔNG: Toàn bộ $totalInstances phiên bản đã được mở và đang chạy."
            break # Thoát khỏi vòng lặp khi tất cả đã chạy
        else
            echo "-------------------------------------------------"
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] PHÁT HIỆN ${#not_running_packages[@]} PHIÊN BẢN CHƯA CHẠY. ĐANG MỞ LẠI..."
            for package_to_start in "${not_running_packages[@]}"; do
                echo "  => Mở lại: $package_to_start"
                am start -a android.intent.action.VIEW -d "$VipServerUrl" -p "$package_to_start" > /dev/null 2>&1
                sleep "$OpenDelay"
            done
            echo "Sẽ kiểm tra lại sau $CheckInterval giây..."
            sleep "$CheckInterval"
        fi
    done
    echo "================================================="
    echo "QUÁ TRÌNH MỞ BAN ĐẦU HOÀN TẤT."
    echo "================================================="
}

# Hàm khởi động lại MỘT phiên bản và xác minh nó chạy lại thành công
function restart_single_instance() {
    local package_to_restart=$1
    echo "-------------------------------------------------"
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] BẮT ĐẦU KHỞI ĐỘNG LẠI: $package_to_restart"

    # Dừng tiến trình bằng kill
    pid_to_kill=$(pidof "$package_to_restart")
    if [[ -n "$pid_to_kill" ]]; then
        echo "  => Đang dừng phiên bản $package_to_restart (PID: $pid_to_kill) bằng 'kill -9'."
        kill -9 "$pid_to_kill"
        sleep 3 # Chờ một chút để tiến trình được dọn dẹp
    else
        echo "  => Phiên bản $package_to_restart không tìm thấy để dừng, có thể đã tự tắt."
    fi

    # Mở lại và xác minh nó đã chạy
    echo "  => Đang mở lại phiên bản $package_to_restart..."
    while true; do
        am start -a android.intent.action.VIEW -d "$VipServerUrl" -p "$package_to_restart" > /dev/null 2>&1
        sleep "$OpenDelay" # Chờ để ứng dụng có thời gian khởi động
        if pidof "$package_to_restart" > /dev/null; then
            echo "  => THÀNH CÔNG: Phiên bản $package_to_restart đã được khởi động lại."
            break
        else
            echo "  => LỖI: Không thể khởi động lại $package_to_restart. Thử lại sau $CheckInterval giây..."
            sleep "$CheckInterval"
        fi
    done
    echo "-------------------------------------------------"
}

# Logic chính dựa trên cấu hình EnableRestartCycle
if [ "$EnableRestartCycle" = true ]; then
    # Chạy một lần để đảm bảo tất cả các phiên bản đều được mở trước khi bắt đầu chu trình
    initial_launch_and_verify

    # Bắt đầu vòng lặp khởi động lại tuần tự vô hạn
    echo ""
    echo "================================================="
    echo "BẮT ĐẦU CHU TRÌNH KHỞI ĐỘNG LẠI TUẦN TỰ VÔ HẠN"
    echo "Mỗi phiên bản sẽ chạy trong $InstanceRunTime giây."
    echo "Sau mỗi lần khởi động lại, script sẽ chờ $DelayBetweenRestarts giây."
    echo "================================================="
    echo ""

    # Vòng lặp vô hạn để quay vòng chu trình
    while true; do
        # Lặp qua từng phiên bản một
        for package in "${all_packages[@]}"; do
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Bắt đầu đếm ngược $InstanceRunTime giây cho: $package"
            sleep "$InstanceRunTime"
            restart_single_instance "$package"
            
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Chờ $DelayBetweenRestarts giây trước khi chuyển sang phiên bản tiếp theo..."
            sleep "$DelayBetweenRestarts"
        done
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] ĐÃ HOÀN THÀNH MỘT VÒNG CHU TRÌNH. BẮT ĐẦU LẠI TỪ PHIÊN BẢN ĐẦU TIÊN."
        echo "================================================="
    done
else
    # Chạy một lần và thoát
    initial_launch_and_verify
    echo "Script đã hoàn tất. Kết thúc theo cấu hình (EnableRestartCycle=false)."
    exit 0
fi

exit 0
