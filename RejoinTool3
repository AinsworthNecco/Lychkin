# ... existing code ...
# --- CÁC GIÁ TRỊ MẶC ĐỊNH ---
DEFAULT_CONFIG = {
    "ACCOUNT_SUFFIXES": [],
    "PLACE_ID": "8737602449",
    "SCAN_INTERVAL_SECONDS": 300,
    "LAUNCH_INTERVAL_SECONDS": 300,
    "MIN_PLAYER_PERCENTAGE": 0,
    "MAX_PLAYER_PERCENTAGE": 50,
    "BASE_PACKAGE_NAME": "com.roblox.clien",
    "PROXY_LIST": [],
    "CONNECTION_TIMEOUT": 15,
    "OUTPUT_FILE_PATH": "found_servers.txt",
    "VIP_SERVER_URL": "",
    "REBOOT_ENABLED": "off",
    "REBOOT_INTERVAL_HOURS": 20,
}

# ---------------------------------------------------
# -- BIẾN TOÀN CỤC --
# ... existing code ...
        for key, _, value in pattern.findall(response.text):
            if key not in config: continue
            value = value.strip()
            
            if key in ["SCAN_INTERVAL_SECONDS", "LAUNCH_INTERVAL_SECONDS", "CONNECTION_TIMEOUT", "REBOOT_INTERVAL_HOURS"]:
                config[key] = int(value)
            elif key in ["MIN_PLAYER_PERCENTAGE", "MAX_PLAYER_PERCENTAGE"]:
                config[key] = float(value)
            elif key == "ACCOUNT_SUFFIXES":
                accounts = []
# ... existing code ...
        print(f"[{thread_name}] Bắt đầu chu kỳ mới.                                  ")

# ==============================================================================
# -- CÁC HÀM KẾT NỐI API --
# ==============================================================================
# ... existing code ...
def launcher_loop(launch_mode):
    """Vòng lặp vô hạn cho tác vụ tham gia game (chỉ tải config 1 lần)."""
    print("[LAUNCH] Tải cấu hình lần đầu...")
    config = fetch_and_load_config(CONFIG_URL)
    print("[LAUNCH] Cấu hình đã được ghi nhớ.")
    interval = config.get("LAUNCH_INTERVAL_SECONDS", 300)
    while True:
        launch_roblox_instances(config, launch_mode, "LAUNCH")
        countdown(interval, "LAUNCH")

def reboot_scheduler_loop():
    """Vòng lặp kiểm tra và thực hiện reboot theo lịch."""
    print("[REBOOT] Tải cấu hình cho trình lên lịch reboot...")
    config = fetch_and_load_config(CONFIG_URL)
    
    if config.get("REBOOT_ENABLED", "off").lower() != "on":
        print("[REBOOT] Tính năng tự động reboot đã bị tắt trong cấu hình. Luồng sẽ thoát.")
        return

    reboot_hours = config.get("REBOOT_INTERVAL_HOURS", 20)
    reboot_seconds = reboot_hours * 3600
    
    print(f"[REBOOT] ✅ Tính năng tự động reboot đã được bật. Thiết bị sẽ khởi động lại sau {reboot_hours} giờ.")
    
    # Dùng hàm countdown để dễ theo dõi thời gian chờ
    for i in range(reboot_seconds, 0, -1):
        hours, remainder = divmod(i, 3600)
        minutes, seconds = divmod(remainder, 60)
        print(f"[REBOOT] Thời gian chờ còn lại: {hours:02d}:{minutes:02d}:{seconds:02d}", end='\r')
        sys.stdout.flush()
        time.sleep(1)

    print(f"\n[REBOOT] ĐÃ HẾT THỜI GIAN. TIẾN HÀNH REBOOT THIẾT BỊ TRONG 5 GIÂY...")
    time.sleep(5)
    
    try:
        print("[REBOOT] Gửi lệnh reboot...")
        subprocess.run(["su", "-c", "reboot"], check=True, capture_output=True, text=True)
    except Exception as e:
        print(f"[REBOOT] ❌ Lỗi nghiêm trọng khi thực thi lệnh reboot: {e}")

# ==============================================================================
# -- ĐIỂM KHỞI ĐẦU SCRIPT --
# ==============================================================================

if __name__ == "__main__":
    if not check_root_access():
        sys.exit(1)

    # --- PHẦN THÊM MỚI: KHỞI ĐỘNG LUỒNG REBOOT ---
    print("[MAIN] Đang khởi động luồng quản lý reboot...")
    reboot_thread = threading.Thread(target=reboot_scheduler_loop, daemon=True)
    reboot_thread.start()
    # ---------------------------------------------

    parser = argparse.ArgumentParser(description="Roblox Task Runner - Công cụ tự động quét và tham gia server.")
    subparsers = parser.add_subparsers(dest='command', help='Các lệnh có sẵn')

    parallel_parser = subparsers.add_parser('parallel', help='Chạy các tác vụ song song (mặc định).')
# ... existing code ...
